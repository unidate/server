
--echo #
--echo # Basic CREATE functionality, defaults, metadata
--echo #

--error ER_WRONG_FIELD_SPEC
CREATE TABLE t1 (a INET6 AUTO_INCREMENT);

CREATE TABLE t1 (a INET6);
SHOW CREATE TABLE t1;
DESCRIBE t1;
--vertical_results
--replace_column 19 #
SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema='test' AND table_name='t1';
--horizontal_results
DROP TABLE t1;

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::1');
--enable_metadata
SELECT * FROM t1;
SELECT CAST('::' AS INET6) AS a;
--disable_metadata
DROP TABLE t1;


CREATE TABLE t1 (
  c1 INET6 DEFAULT 0x00000000000000000000000000000000,
  c2 INET6 DEFAULT 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,
  c3 INET6 DEFAULT '::',
  c4 INET6 DEFAULT 'FFFF::ffff'
);
SHOW CREATE TABLE t1;
DESCRIBE t1;
--vertical_results
--replace_column 19 #
SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema='test' AND table_name='t1';
--horizontal_results
DROP TABLE t1;

--error ER_INVALID_DEFAULT
CREATE TABLE t1 (c1 INET6 DEFAULT 0x00);
--error ER_INVALID_DEFAULT
CREATE TABLE t1 (c1 INET6 DEFAULT '');


CREATE TABLE t1 (a INET6);
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t1 VALUES ('x');
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t1 VALUES (1);
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t1 VALUES (TIME'10:20:30');
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t1 VALUES (0x00);
DROP TABLE t1;

--echo #
--echo # Text and binary formats, comparison operators
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES (0x00000000000000000000000000000000);
INSERT INTO t1 VALUES (0x00000000000000000000000000000001);
INSERT INTO t1 VALUES (0xFFFF0000000000000000000000000001);
INSERT INTO t1 VALUES (0xFFFF0000000000000000000000000002);
SELECT * FROM t1 ORDER BY a;
SELECT * FROM t1 ORDER BY a DESC;
SELECT HEX(a),a FROM t1 ORDER BY a;
SELECT * FROM t1 WHERE a='::';
SELECT * FROM t1 WHERE a='::1';
SELECT * FROM t1 WHERE a='ffff::1';
SELECT * FROM t1 WHERE a='ffff::2';
SELECT * FROM t1 WHERE a=0x00000000000000000000000000000000;
SELECT * FROM t1 WHERE a=0x00000000000000000000000000000001;
SELECT * FROM t1 WHERE a=0xffff0000000000000000000000000001;
SELECT * FROM t1 WHERE a=0xffff0000000000000000000000000002;
SELECT * FROM t1 WHERE a<'::';
SELECT * FROM t1 WHERE a<='::';
SELECT * FROM t1 WHERE a>='ffff::2';
SELECT * FROM t1 WHERE a>'ffff::2';
SELECT * FROM t1 WHERE a IN ('::', 'ffff::1') ORDER BY a;
SELECT * FROM t1 WHERE a IN ('::', 0xffff0000000000000000000000000002) ORDER BY a;

SELECT * FROM t1 WHERE a='0::0';
SELECT * FROM t1 WHERE a='0::00';
SELECT * FROM t1 WHERE a='0::000';
SELECT * FROM t1 WHERE a='0::0000';

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a=0;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a=0.0;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a=0e0;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a=TIME'10:20:30';
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a IN ('::', 10);

DROP TABLE t1;

--echo #
--echo # CASE abbreviations
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES (NULL),('::1'),('::2');
SELECT COALESCE(a, '::') FROM t1 ORDER BY a;
SELECT a, LEAST(a,'::0'), LEAST(a,'::f') FROM t1 ORDER BY a;
SELECT a, GREATEST(a,'::0'), GREATEST(a,'::f') FROM t1 ORDER BY a;

CREATE TABLE t2 AS SELECT
  COALESCE(a, '::'),
  LEAST(a,'::'),
  GREATEST(a,'::')
FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

SELECT COALESCE(a, 0x00000000000000000000000000000000) FROM t1 ORDER BY a;
SELECT a,
  LEAST(a, 0x00000000000000000000000000000000),
  LEAST(a, 0x0000000000000000000000000000000f)
FROM t1 ORDER BY a;
SELECT a,
  GREATEST(a, 0x00000000000000000000000000000000),
  GREATEST(a, 0x0000000000000000000000000000000f)
FROM t1 ORDER BY a;

CREATE TABLE t2 AS SELECT
  COALESCE(a, 0x00000000000000000000000000000000),
  LEAST(a,0x00000000000000000000000000000000),
  GREATEST(a,0x00000000000000000000000000000000)
FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT COALESCE(a, 10) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT LEAST(a, 10) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT GREATEST(a, 10) FROM t1;
DROP TABLE t1;


--echo #
--echo # Uniqueness
--echo #

CREATE TABLE t1 (a INET6 NOT NULL PRIMARY KEY);
INSERT INTO t1 VALUES ('41::1'),('61::1');
--error ER_DUP_ENTRY
INSERT INTO t1 VALUES ('41::1');
SELECT * FROM t1;
DROP TABLE t1;


--echo #
--echo # Indexes
--echo #

--error ER_WRONG_SUB_KEY
CREATE TABLE t1 (a INET6, KEY(a(1)));


--echo #
--echo # Explicit CAST on INSERT
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES (CAST('1::1' AS INET6));
INSERT INTO t1 VALUES (CAST('1::2' AS INET6));
INSERT INTO t1 VALUES (CAST('1::3' AS INET6));
INSERT INTO t1 VALUES (CAST(CONCAT('2','::1') AS INET6));
INSERT INTO t1 VALUES (CAST(CONCAT('2','::2') AS INET6));
INSERT INTO t1 VALUES (CAST(CONCAT('2','::3') AS INET6));
SELECT * FROM t1 ORDER BY a;
DROP TABLE t1;


--echo #
--echo # Explicit CAST and implicit CAST on ALTER
--echo #

CREATE TABLE t1 (a VARCHAR(64));
INSERT INTO t1 VALUES ('garbage'),('::'),('::1'),('ffff::1'),('ffff::2');
SELECT a, CAST(a AS INET6) FROM t1 ORDER BY a;
SELECT a, CAST(a AS INET6) FROM t1 ORDER BY CAST(a AS INET6);
--error ER_TRUNCATED_WRONG_VALUE
ALTER TABLE t1 MODIFY a INET6;
SET sql_mode='';
ALTER TABLE t1 MODIFY a INET6;
SET sql_mode=DEFAULT;
SELECT * FROM t1 ORDER BY a;
DROP TABLE t1;


CREATE TABLE t1 (a BINARY(16));
INSERT INTO t1 VALUES (0x00000000000000000000000000000000);
INSERT INTO t1 VALUES (0x00000000000000000000000000000001);
INSERT INTO t1 VALUES (0xffff0000000000000000000000000001);
INSERT INTO t1 VALUES (0xffff0000000000000000000000000002);
SELECT HEX(a), CAST(a AS INET6) FROM t1 ORDER BY a;
ALTER TABLE t1 MODIFY a INET6;
SELECT * FROM t1 ORDER BY a;
DROP TABLE t1;


--echo #
--echo # INSERT..SELECT, same data types
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::1'),('::2');
CREATE TABLE t2 (a INET6);
INSERT INTO t2 SELECT a FROM t1;
SELECT * FROM t2;
DROP TABLE t1,t2;


--echo #
--echo # Implicit CAST on INSERT..SELECT, text format
--echo #

CREATE TABLE t1 (a VARCHAR(64));
INSERT INTO t1 VALUES ('garbage'),('::'),('::1'),('ffff::1'),('ffff::2');

CREATE TABLE t2 (a INET6);
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t2 SELECT a FROM t1;
SET sql_mode='';
INSERT INTO t2 SELECT a FROM t1;
SELECT * FROM t2 ORDER BY a;
SET sql_mode=DEFAULT;
DROP TABLE t2;

CREATE TABLE t2 (a INET6 NOT NULL);
--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO t2 SELECT a FROM t1;
SET sql_mode='';
INSERT INTO t2 SELECT a FROM t1;
SELECT * FROM t2 ORDER BY a;
SET sql_mode=DEFAULT;
DROP TABLE t2;

DROP TABLE t1;


--echo #
--echo # Implicit CAST on INSERT..SELECT, binary format
--echo #

CREATE TABLE t1 (a BINARY(16));
INSERT INTO t1 VALUES (0x00000000000000000000000000000000);
INSERT INTO t1 VALUES (0x00000000000000000000000000000001);
INSERT INTO t1 VALUES (0xffff0000000000000000000000000001);
INSERT INTO t1 VALUES (0xffff0000000000000000000000000002);
CREATE TABLE t2 (a INET6);
INSERT INTO t2 SELECT a FROM t1;
SELECT a FROM t2 ORDER BY a;
DROP TABLE t1,t2;


--echo #
--echo # CAST to other data types
--echo #

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS DOUBLE);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS DECIMAL);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS SIGNED);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS UNSIGNED);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS TIME);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS DATE);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CAST(CAST('::' AS INET6) AS DATETIME);

SELECT CAST(CAST('::' AS INET6) AS CHAR);
CREATE TABLE t1 AS SELECT CAST(CAST('::' AS INET6) AS CHAR) AS a;
SHOW CREATE TABLE t1;
DROP TABLE t1;


--echo #
--echo # Implicit conversion to other types in INSERT
--echo #

CREATE TABLE t1 (a INT);
--error ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 VALUES (CAST('::' AS INET6));
DROP TABLE t1;

CREATE TABLE t1 (a DOUBLE);
--error ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 VALUES (CAST('::' AS INET6));
DROP TABLE t1;

CREATE TABLE t1 (a DECIMAL(32,0));
--error ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 VALUES (CAST('::' AS INET6));
DROP TABLE t1;

CREATE TABLE t1 (a VARCHAR(64));
INSERT INTO t1 VALUES (CAST('::' AS INET6));
DROP TABLE t1;

CREATE TABLE t1 (a TEXT);
INSERT INTO t1 VALUES (CAST('::' AS INET6));
DROP TABLE t1;



--echo #
--echo # Boolean context
--echo #

SELECT
  CAST('::' AS INET6) IS TRUE, 
  CAST('::' AS INET6) IS FALSE,
  CAST('::1' AS INET6) IS TRUE,
  CAST('::1' AS INET6) IS FALSE;

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::1');
SELECT a, a IS TRUE, a IS FALSE FROM t1 ORDER BY a;
DROP TABLE t1;

#
# TODO: Error looks like a bug. This should return rows where a<>'::'.
# The same problem is repeatable with GEOMETRY.
#
CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::1'),('::2');
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT * FROM t1 WHERE a;
DROP TABLE t1;


--echo #
--echo # GROUP BY
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::');
INSERT INTO t1 VALUES ('::1'),('::01'),('::0001');
INSERT INTO t1 VALUES ('::2'),('::2'),('::2'),('::2');
SELECT a, COUNT(*) FROM t1 GROUP BY a;
DROP TABLE t1;

--echo #
--echo # Aggregate functions
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::');
INSERT INTO t1 VALUES ('::1'),('::01'),('::0001');
INSERT INTO t1 VALUES ('::2'),('::2'),('::2'),('::2');
SELECT MIN(a),MAX(a) FROM t1;

CREATE TABLE t2 AS SELECT MIN(a), MAX(a) FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT AVG(a) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT AVG(DISTINCT a) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT SUM(a) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT SUM(DISTINCT a) FROM t1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT STDDEV(a) FROM t1;
SELECT GROUP_CONCAT(a ORDER BY a) FROM t1;
SELECT a, GROUP_CONCAT(a ORDER BY a) FROM t1 GROUP BY a;
DROP TABLE t1;

--echo #
--echo # Window functions
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::1'),('::2'),('::3'),('::4');
SELECT
  a,
  LAG(a) OVER (ORDER BY a),
  LEAD(a) OVER (ORDER BY a)
FROM t1 ORDER BY a;

SELECT
  a,
  FIRST_VALUE(a) OVER (ORDER BY a ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING),
  LAST_VALUE(a) OVER (ORDER BY a ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)
FROM t1 ORDER BY a;
DROP TABLE t1;


--echo #
--echo # Prepared statements
--echo #

EXECUTE IMMEDIATE 'CREATE TABLE t1 AS SELECT ? AS a' USING CAST('::' AS INET6);
SHOW CREATE TABLE t1;
EXECUTE IMMEDIATE 'INSERT INTO t1 VALUES (?)' USING '::1';
EXECUTE IMMEDIATE 'INSERT INTO t1 VALUES (?)' USING CAST('::2' AS INET6);
EXECUTE IMMEDIATE 'INSERT INTO t1 VALUES (?)' USING 0x00000000000000000000000000000003;
SELECT a FROM t1 ORDER BY a;
EXECUTE IMMEDIATE 'SELECT * FROM t1 WHERE a=?' USING '::1';
EXECUTE IMMEDIATE 'SELECT * FROM t1 WHERE a=?' USING CAST('::2' AS INET6);
EXECUTE IMMEDIATE 'SELECT * FROM t1 WHERE a=?' USING 0x00000000000000000000000000000003;
DROP TABLE t1;


--echo #
--echo # Range optimizer
--echo #

CREATE TABLE t1 (a INET6, INDEX(a));
DELIMITER $$;
FOR i IN 0..255
DO
  INSERT INTO t1 VALUES (CONCAT('::', HEX(i)));
END FOR
$$
DELIMITER ;$$
SELECT * FROM t1 WHERE a='::ff';
EXPLAIN SELECT * FROM t1 WHERE a='::ff';
SELECT * FROM t1 WHERE a='garbage';
EXPLAIN SELECT * FROM t1 WHERE a='garbage';

SELECT * FROM t1 WHERE a>='::fe';
EXPLAIN SELECT * FROM t1 WHERE a>='::fe';
SELECT * FROM t1 WHERE a>='garbage';
EXPLAIN SELECT * FROM t1 WHERE a>='garbage';

SELECT * FROM t1 WHERE a IN ('::80','::a0','::f0');
EXPLAIN SELECT * FROM t1 WHERE a IN ('::80','::a0','::f0');
SELECT * FROM t1 WHERE a IN ('::80','::a0','garbage');
EXPLAIN SELECT * FROM t1 WHERE a IN ('::80','::a0','garbage');

SELECT * FROM t1 WHERE a BETWEEN '::80' AND '::81';
EXPLAIN SELECT * FROM t1 WHERE a BETWEEN '::80' AND '::81';
SELECT * FROM t1 WHERE a BETWEEN '::80' AND 'garbage';
EXPLAIN SELECT * FROM t1 WHERE a BETWEEN '::80' AND 'garbage';

SELECT * FROM t1 WHERE a=CAST('::ff' AS INET6);
EXPLAIN EXTENDED SELECT * FROM t1 WHERE a=CAST('::ff' AS INET6);

DROP TABLE t1;


--echo #
--echo # Character set and collation aggregation
--echo #

CREATE TABLE t1 (a INET6);

CREATE TABLE t2 AS SELECT
  CONCAT(a) AS c1,
  CONCAT(CAST('::' AS INET6)) AS c2
FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

CREATE TABLE t2 AS SELECT
  CONCAT(_utf8'1', a) AS c1,
  CONCAT(_utf8'1', CAST('::1' AS INET6)) AS c2,
  CONCAT(_utf8'1', COALESCE(a)) AS c3
FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

CREATE TABLE t2 AS SELECT
  CONCAT(_latin1'1', a) AS c1,
  CONCAT(_latin1'1', CAST('::1' AS INET6)) AS c2,
  CONCAT(_latin1'1', COALESCE(a)) AS c3
FROM t1;
SHOW CREATE TABLE t2;
DROP TABLE t2;

DROP TABLE t1;


--echo #
--echo # UNION
--echo #

CREATE TABLE t1 AS SELECT CAST('::' AS INET6) AS c UNION SELECT CAST('::1' AS INET6);
SHOW CREATE TABLE t1;
DROP TABLE t1;

CREATE TABLE t1 AS SELECT CAST('::' AS INET6) AS c UNION SELECT '::1';
SHOW CREATE TABLE t1;
DROP TABLE t1;

CREATE TABLE t1 AS SELECT '::' AS c UNION SELECT CAST('::1' AS INET6);
SHOW CREATE TABLE t1;
DROP TABLE t1;

CREATE TABLE t1 AS SELECT CAST('::' AS INET6) AS c UNION SELECT 0x00000000000000000000000000000001;
SELECT * FROM t1;
DROP TABLE t1;

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
CREATE TABLE t1 AS SELECT CAST('::' AS INET6) AS c UNION SELECT 1;


--echo #
--echo # Unary operators
--echo #

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT -CAST('::' AS INET6);

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT ABS(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT ROUND(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT CEILING(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT FLOOR(CAST('::' AS INET6));


--echo #
--echo # Arithmetic operators
--echo #

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT CAST('::' AS INET6) + 1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT CAST('::' AS INET6) - 1;

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT CAST('::' AS INET6) * 1;
--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT CAST('::' AS INET6) / 1;

--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
SELECT CAST('::' AS INET6) MOD 1;


--echo #
--echo # Misc
--echo #

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT RAND(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT FROM_UNIXTIME(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT HOUR(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT YEAR(CAST('::' AS INET6));

--error ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION
SELECT RELEASE_LOCK(CAST('::' AS INET6));


SELECT JSON_LENGTH(CAST('::' AS INET6));

--echo #
--echo # Virtual columns
--echo #

--error ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED
CREATE TABLE t1 (
  a INT,
  b INET6 GENERATED ALWAYS AS (CAST(CONCAT(RAND(),a) AS INET6)), INDEX(b)
);

CREATE TABLE t1 (
  a INT,
  b INET6 GENERATED ALWAYS AS (CAST(CONCAT('::',HEX(a)) AS INET6)), INDEX(b)
);
INSERT INTO t1 (a) VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15);
SELECT * FROM t1;
DROP TABLE t1;

--echo #
--echo # VIEW
--echo #

CREATE TABLE t1 (a INT DEFAULT 0);
INSERT INTO t1 (a) VALUES (0),(1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15);
SELECT * FROM t1 ORDER BY a;
CREATE VIEW v1 AS SELECT (CAST(CONCAT('::',HEX(a)) AS INET6)) AS c FROM t1;
SELECT * FROM v1 ORDER BY c;
DROP VIEW v1;
DROP TABLE t1;

CREATE TABLE t1 (a INET6 DEFAULT '::');
CREATE VIEW v1 AS SELECT * FROM t1;
SHOW CREATE VIEW v1;
DESCRIBE v1;
INSERT INTO v1 VALUES ('::'),('::1'),('::2');
SELECT * FROM t1;
DROP VIEW v1;
DROP TABLE t1;

CREATE TABLE t1 (a INET6 DEFAULT CAST('::' AS INET6));
CREATE VIEW v1 AS SELECT * FROM t1;
SHOW CREATE VIEW v1;
DESCRIBE v1;
INSERT INTO v1 VALUES ('::'),('::1'),('::2');
SELECT * FROM t1;
DROP VIEW v1;
DROP TABLE t1;


--echo #
--echo # Subqueries
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::'),('::1'),('::2');
SELECT * FROM t1 WHERE a=(SELECT MIN(a) FROM t1) ORDER BY a;
SELECT * FROM t1 WHERE a=(SELECT MAX(a) FROM t1) ORDER BY a;
SELECT * FROM t1 WHERE a IN (SELECT a FROM t1 WHERE a>'::') ORDER BY a;
DROP TABLE t1;

--echo #
--echo # Stored routines
--echo #

DELIMITER $$;
CREATE PROCEDURE p1(a INET6)
BEGIN
  DECLARE b INET6 DEFAULT CONCAT('1', a);
  SELECT a, b;
END;
$$
DELIMITER ;$$
CALL p1('::1');
CALL p1(CAST('::2' AS INET6));
DROP PROCEDURE p1;

DELIMITER $$;
CREATE FUNCTION f1(a INET6) RETURNS INET6
BEGIN
  RETURN CONCAT('1',a);
END;
$$
DELIMITER ;$$
SELECT f1('::1');
SELECT f1(CAST('::1' AS INET6));
DROP FUNCTION f1;

--echo #
--echo # Anchored data types in SP variables
--echo #

CREATE TABLE t1 (a INET6);
INSERT INTO t1 VALUES ('::1');
DELIMITER $$;
CREATE PROCEDURE p1()
BEGIN
  DECLARE va TYPE OF t1.a;
  SELECT MAX(a) INTO va FROM t1;
  SELECT va;
END;
$$
DELIMITER ;$$
CALL p1;
DROP PROCEDURE p1;
DROP TABLE t1;


CREATE TABLE t1 (a INET6, b INET6);
INSERT INTO t1 VALUES ('::a', '::b');
DELIMITER $$;
CREATE PROCEDURE p1()
BEGIN
  DECLARE va ROW TYPE OF t1;
  SELECT MAX(a), MAX(b) INTO va FROM t1;
  SELECT va.a, va.b;
END;
$$
DELIMITER ;$$
CALL p1;
DROP PROCEDURE p1;
DROP TABLE t1;


## mysql_client_test

#CREATE TABLE t1 (a INET6 DEFAULT CAST(0x00000000000000000000000000000000 AS INET6));
#SHOW CREATE TABLE t1;
#DROP TABLE t1;

##--error ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION
##SELECT CAST('::' AS INET6) DIV 1;
#
##SELECT JSON_LENGTH(CAST('::' AS INET6));
##
## EXTRACT(MINUTE...)
##
## EXECUTE IMMEDIATE 'SELECT * FROM t1 LIMIT ?' USING CAST('::' AS INET6);
##
